import { PrismaService } from '../prisma.service';
export declare class EMRRepository {
    private prisma;
    constructor(prisma: PrismaService);
    get patientVisit(): import(".prisma/client").Prisma.PatientVisitDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    get prescription(): import(".prisma/client").Prisma.PrescriptionDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    get labOrder(): import(".prisma/client").Prisma.LabOrderDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    get imagingOrder(): import(".prisma/client").Prisma.ImagingOrderDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    get clinicalTemplate(): import(".prisma/client").Prisma.ClinicalTemplateDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    get labResult(): import(".prisma/client").Prisma.LabResultDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    get imagingResult(): import(".prisma/client").Prisma.ImagingResultDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    findVisitById(id: string): Promise<{
        prescriptions: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            doctorId: string;
            status: import(".prisma/client").$Enums.PrescriptionStatus;
            patientId: string;
            duration: string;
            visitId: string | null;
            medicationName: string;
            genericName: string | null;
            dosage: string;
            frequency: string;
            quantity: number;
            refills: number;
            instructions: string | null;
            drugInteractions: string[];
            contraindications: string[];
            pharmacyName: string | null;
            pharmacyAddress: string | null;
            pharmacyPhone: string | null;
            deliveryMethod: import(".prisma/client").$Enums.DeliveryMethod;
            prescribedAt: Date;
            filledAt: Date | null;
            pickedUpAt: Date | null;
            qrCode: string | null;
            digitalSignature: string | null;
        }[];
        labOrders: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            doctorId: string;
            status: import(".prisma/client").$Enums.LabOrderStatus;
            patientId: string;
            visitId: string | null;
            testsRequested: string[];
            clinicalNotes: string | null;
            urgency: import(".prisma/client").$Enums.OrderUrgency;
            labName: string | null;
            labAddress: string | null;
            orderedAt: Date;
            collectedAt: Date | null;
            completedAt: Date | null;
        }[];
        imagingOrders: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            doctorId: string;
            status: import(".prisma/client").$Enums.ImagingOrderStatus;
            patientId: string;
            visitId: string | null;
            urgency: import(".prisma/client").$Enums.OrderUrgency;
            orderedAt: Date;
            completedAt: Date | null;
            studyType: import(".prisma/client").$Enums.ImagingStudyType;
            bodyPart: string;
            clinicalHistory: string | null;
            imagingCenter: string | null;
            centerAddress: string | null;
            scheduledAt: Date | null;
            performedAt: Date | null;
        }[];
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        doctorId: string;
        appointmentId: string | null;
        patientId: string;
        visitDate: Date;
        visitType: import(".prisma/client").$Enums.VisitType;
        chiefComplaint: string;
        subjective: string | null;
        objective: string | null;
        assessment: string | null;
        plan: string | null;
        voiceNotes: string | null;
        voiceFileUrl: string | null;
        followUpRequired: boolean;
        followUpDate: Date | null;
        followUpNotes: string | null;
    }>;
    findVisitsByPatientId(patientId: string): Promise<({
        prescriptions: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            doctorId: string;
            status: import(".prisma/client").$Enums.PrescriptionStatus;
            patientId: string;
            duration: string;
            visitId: string | null;
            medicationName: string;
            genericName: string | null;
            dosage: string;
            frequency: string;
            quantity: number;
            refills: number;
            instructions: string | null;
            drugInteractions: string[];
            contraindications: string[];
            pharmacyName: string | null;
            pharmacyAddress: string | null;
            pharmacyPhone: string | null;
            deliveryMethod: import(".prisma/client").$Enums.DeliveryMethod;
            prescribedAt: Date;
            filledAt: Date | null;
            pickedUpAt: Date | null;
            qrCode: string | null;
            digitalSignature: string | null;
        }[];
        labOrders: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            doctorId: string;
            status: import(".prisma/client").$Enums.LabOrderStatus;
            patientId: string;
            visitId: string | null;
            testsRequested: string[];
            clinicalNotes: string | null;
            urgency: import(".prisma/client").$Enums.OrderUrgency;
            labName: string | null;
            labAddress: string | null;
            orderedAt: Date;
            collectedAt: Date | null;
            completedAt: Date | null;
        }[];
        imagingOrders: {
            id: string;
            createdAt: Date;
            updatedAt: Date;
            doctorId: string;
            status: import(".prisma/client").$Enums.ImagingOrderStatus;
            patientId: string;
            visitId: string | null;
            urgency: import(".prisma/client").$Enums.OrderUrgency;
            orderedAt: Date;
            completedAt: Date | null;
            studyType: import(".prisma/client").$Enums.ImagingStudyType;
            bodyPart: string;
            clinicalHistory: string | null;
            imagingCenter: string | null;
            centerAddress: string | null;
            scheduledAt: Date | null;
            performedAt: Date | null;
        }[];
    } & {
        id: string;
        createdAt: Date;
        updatedAt: Date;
        doctorId: string;
        appointmentId: string | null;
        patientId: string;
        visitDate: Date;
        visitType: import(".prisma/client").$Enums.VisitType;
        chiefComplaint: string;
        subjective: string | null;
        objective: string | null;
        assessment: string | null;
        plan: string | null;
        voiceNotes: string | null;
        voiceFileUrl: string | null;
        followUpRequired: boolean;
        followUpDate: Date | null;
        followUpNotes: string | null;
    })[]>;
}
