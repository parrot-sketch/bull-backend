import { DatabaseService } from '../../auth/services/database.service';
export declare class EmrService {
    private readonly db;
    constructor(db: DatabaseService);
    getPatientOverview(patientId: string): Promise<{
        success: boolean;
        data: {
            patient: {
                id: string;
                name: string;
                email: string;
                phoneNumber: string;
                dateOfBirth: Date;
                gender: import(".prisma/client").$Enums.Gender;
            };
            profile: {
                prescriptions: {
                    status: import(".prisma/client").$Enums.PrescriptionStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string;
                    duration: string;
                    patientId: string;
                    prescribedAt: Date;
                    visitId: string | null;
                    medicationName: string;
                    genericName: string | null;
                    dosage: string;
                    frequency: string;
                    quantity: number;
                    refills: number;
                    instructions: string | null;
                    drugInteractions: string[];
                    contraindications: string[];
                    pharmacyName: string | null;
                    pharmacyAddress: string | null;
                    pharmacyPhone: string | null;
                    deliveryMethod: import(".prisma/client").$Enums.DeliveryMethod;
                    filledAt: Date | null;
                    pickedUpAt: Date | null;
                    qrCode: string | null;
                    digitalSignature: string | null;
                }[];
                labResults: {
                    status: import(".prisma/client").$Enums.LabResultStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string | null;
                    patientId: string;
                    reportedAt: Date;
                    orderId: string | null;
                    testName: string;
                    testCategory: import(".prisma/client").$Enums.LabTestCategory;
                    resultValue: string;
                    resultUnit: string | null;
                    referenceRange: string | null;
                    isAbnormal: boolean;
                    criticalValue: boolean;
                    reportFileUrl: string | null;
                    ocrText: string | null;
                    labName: string;
                    labAddress: string | null;
                    labPhone: string | null;
                    technicianName: string | null;
                    collectedAt: Date;
                    processedAt: Date | null;
                    reviewedAt: Date | null;
                    reviewedBy: string | null;
                }[];
                imagingResults: {
                    status: import(".prisma/client").$Enums.ImagingResultStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string | null;
                    patientId: string;
                    reportedAt: Date;
                    orderId: string | null;
                    reportFileUrl: string | null;
                    ocrText: string | null;
                    reviewedAt: Date | null;
                    reviewedBy: string | null;
                    studyType: import(".prisma/client").$Enums.ImagingStudyType;
                    bodyPart: string;
                    technique: string | null;
                    contrastUsed: boolean;
                    findings: string | null;
                    impression: string | null;
                    recommendations: string | null;
                    imageUrls: string[];
                    radiologistName: string | null;
                    radiologistId: string | null;
                    performedAt: Date;
                }[];
                allergies: {
                    id: string;
                    severity: import(".prisma/client").$Enums.AllergySeverity;
                    createdAt: Date;
                    updatedAt: Date;
                    patientId: string;
                    notes: string | null;
                    allergen: string;
                    reaction: string;
                    diagnosedAt: Date | null;
                    diagnosedBy: string | null;
                }[];
                currentMedications: {
                    startDate: Date;
                    endDate: Date | null;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    patientId: string;
                    medicationName: string;
                    dosage: string;
                    frequency: string;
                    notes: string | null;
                    route: string | null;
                    prescribedBy: string | null;
                    pharmacy: string | null;
                }[];
                visits: ({
                    doctor: {
                        id: string;
                        firstName: string;
                        lastName: string;
                        specialization: string;
                    };
                    diagnoses: {
                        id: string;
                        createdAt: Date;
                        visitId: string;
                        icd10Code: string;
                        diagnosisName: string;
                        isPrimary: boolean;
                        notes: string | null;
                    }[];
                } & {
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string;
                    visitDate: Date;
                    patientId: string;
                    appointmentId: string | null;
                    visitType: import(".prisma/client").$Enums.VisitType;
                    chiefComplaint: string;
                    subjective: string | null;
                    objective: string | null;
                    assessment: string | null;
                    plan: string | null;
                    voiceNotes: string | null;
                    voiceFileUrl: string | null;
                    followUpRequired: boolean;
                    followUpDate: Date | null;
                    followUpNotes: string | null;
                })[];
            } & {
                id: string;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                createdAt: Date;
                updatedAt: Date;
                patientId: string;
                bloodType: import(".prisma/client").$Enums.BloodType | null;
                height: number | null;
                weight: number | null;
                emergencyContact: string | null;
                emergencyPhone: string | null;
                medicalHistory: string[];
                surgicalHistory: string[];
                familyHistory: string[];
                socialHistory: string | null;
                primaryInsurance: string | null;
                insuranceNumber: string | null;
                insuranceExpiry: Date | null;
                preferredLanguage: string;
                communicationPref: import(".prisma/client").$Enums.CommunicationPreference;
            };
            healthMetrics: {
                riskFactors: any[];
                activeConditions: string[];
                medicationCount: number;
                allergyCount: number;
                lastVisitDate: Date;
                criticalLabResults: number;
            };
            recentActivity: {
                visits: ({
                    doctor: {
                        id: string;
                        firstName: string;
                        lastName: string;
                        specialization: string;
                    };
                    diagnoses: {
                        id: string;
                        createdAt: Date;
                        visitId: string;
                        icd10Code: string;
                        diagnosisName: string;
                        isPrimary: boolean;
                        notes: string | null;
                    }[];
                } & {
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string;
                    visitDate: Date;
                    patientId: string;
                    appointmentId: string | null;
                    visitType: import(".prisma/client").$Enums.VisitType;
                    chiefComplaint: string;
                    subjective: string | null;
                    objective: string | null;
                    assessment: string | null;
                    plan: string | null;
                    voiceNotes: string | null;
                    voiceFileUrl: string | null;
                    followUpRequired: boolean;
                    followUpDate: Date | null;
                    followUpNotes: string | null;
                })[];
                labResults: {
                    status: import(".prisma/client").$Enums.LabResultStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string | null;
                    patientId: string;
                    reportedAt: Date;
                    orderId: string | null;
                    testName: string;
                    testCategory: import(".prisma/client").$Enums.LabTestCategory;
                    resultValue: string;
                    resultUnit: string | null;
                    referenceRange: string | null;
                    isAbnormal: boolean;
                    criticalValue: boolean;
                    reportFileUrl: string | null;
                    ocrText: string | null;
                    labName: string;
                    labAddress: string | null;
                    labPhone: string | null;
                    technicianName: string | null;
                    collectedAt: Date;
                    processedAt: Date | null;
                    reviewedAt: Date | null;
                    reviewedBy: string | null;
                }[];
                imagingResults: {
                    status: import(".prisma/client").$Enums.ImagingResultStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string | null;
                    patientId: string;
                    reportedAt: Date;
                    orderId: string | null;
                    reportFileUrl: string | null;
                    ocrText: string | null;
                    reviewedAt: Date | null;
                    reviewedBy: string | null;
                    studyType: import(".prisma/client").$Enums.ImagingStudyType;
                    bodyPart: string;
                    technique: string | null;
                    contrastUsed: boolean;
                    findings: string | null;
                    impression: string | null;
                    recommendations: string | null;
                    imageUrls: string[];
                    radiologistName: string | null;
                    radiologistId: string | null;
                    performedAt: Date;
                }[];
                prescriptions: {
                    status: import(".prisma/client").$Enums.PrescriptionStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string;
                    duration: string;
                    patientId: string;
                    prescribedAt: Date;
                    visitId: string | null;
                    medicationName: string;
                    genericName: string | null;
                    dosage: string;
                    frequency: string;
                    quantity: number;
                    refills: number;
                    instructions: string | null;
                    drugInteractions: string[];
                    contraindications: string[];
                    pharmacyName: string | null;
                    pharmacyAddress: string | null;
                    pharmacyPhone: string | null;
                    deliveryMethod: import(".prisma/client").$Enums.DeliveryMethod;
                    filledAt: Date | null;
                    pickedUpAt: Date | null;
                    qrCode: string | null;
                    digitalSignature: string | null;
                }[];
            };
        };
        message: string;
    }>;
    searchPatients(searchCriteria: {
        name?: string;
        email?: string;
        phoneNumber?: string;
        dateOfBirth?: string;
        medicalRecordNumber?: string;
        limit?: number;
    }): Promise<{
        success: boolean;
        data: {
            id: string;
            name: string;
            email: string;
            phoneNumber: string;
            dateOfBirth: Date;
            gender: import(".prisma/client").$Enums.Gender;
            profile: {
                allergies: {
                    id: string;
                    severity: import(".prisma/client").$Enums.AllergySeverity;
                    createdAt: Date;
                    updatedAt: Date;
                    patientId: string;
                    notes: string | null;
                    allergen: string;
                    reaction: string;
                    diagnosedAt: Date | null;
                    diagnosedBy: string | null;
                }[];
                currentMedications: {
                    startDate: Date;
                    endDate: Date | null;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    patientId: string;
                    medicationName: string;
                    dosage: string;
                    frequency: string;
                    notes: string | null;
                    route: string | null;
                    prescribedBy: string | null;
                    pharmacy: string | null;
                }[];
            } & {
                id: string;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                createdAt: Date;
                updatedAt: Date;
                patientId: string;
                bloodType: import(".prisma/client").$Enums.BloodType | null;
                height: number | null;
                weight: number | null;
                emergencyContact: string | null;
                emergencyPhone: string | null;
                medicalHistory: string[];
                surgicalHistory: string[];
                familyHistory: string[];
                socialHistory: string | null;
                primaryInsurance: string | null;
                insuranceNumber: string | null;
                insuranceExpiry: Date | null;
                preferredLanguage: string;
                communicationPref: import(".prisma/client").$Enums.CommunicationPreference;
            };
        }[];
        message: string;
    }>;
    getPatientTimeline(patientId: string, startDate?: string, endDate?: string): Promise<{
        success: boolean;
        data: ({
            type: string;
            date: Date;
            data: {
                doctor: {
                    id: string;
                    firstName: string;
                    lastName: string;
                    specialization: string;
                };
                diagnoses: {
                    id: string;
                    createdAt: Date;
                    visitId: string;
                    icd10Code: string;
                    diagnosisName: string;
                    isPrimary: boolean;
                    notes: string | null;
                }[];
            } & {
                id: string;
                createdAt: Date;
                updatedAt: Date;
                doctorId: string;
                visitDate: Date;
                patientId: string;
                appointmentId: string | null;
                visitType: import(".prisma/client").$Enums.VisitType;
                chiefComplaint: string;
                subjective: string | null;
                objective: string | null;
                assessment: string | null;
                plan: string | null;
                voiceNotes: string | null;
                voiceFileUrl: string | null;
                followUpRequired: boolean;
                followUpDate: Date | null;
                followUpNotes: string | null;
            };
        } | {
            type: string;
            date: Date;
            data: {
                status: import(".prisma/client").$Enums.LabResultStatus;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                doctorId: string | null;
                patientId: string;
                reportedAt: Date;
                orderId: string | null;
                testName: string;
                testCategory: import(".prisma/client").$Enums.LabTestCategory;
                resultValue: string;
                resultUnit: string | null;
                referenceRange: string | null;
                isAbnormal: boolean;
                criticalValue: boolean;
                reportFileUrl: string | null;
                ocrText: string | null;
                labName: string;
                labAddress: string | null;
                labPhone: string | null;
                technicianName: string | null;
                collectedAt: Date;
                processedAt: Date | null;
                reviewedAt: Date | null;
                reviewedBy: string | null;
            };
        } | {
            type: string;
            date: Date;
            data: {
                status: import(".prisma/client").$Enums.ImagingResultStatus;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                doctorId: string | null;
                patientId: string;
                reportedAt: Date;
                orderId: string | null;
                reportFileUrl: string | null;
                ocrText: string | null;
                reviewedAt: Date | null;
                reviewedBy: string | null;
                studyType: import(".prisma/client").$Enums.ImagingStudyType;
                bodyPart: string;
                technique: string | null;
                contrastUsed: boolean;
                findings: string | null;
                impression: string | null;
                recommendations: string | null;
                imageUrls: string[];
                radiologistName: string | null;
                radiologistId: string | null;
                performedAt: Date;
            };
        } | {
            type: string;
            date: Date;
            data: {
                doctor: {
                    id: string;
                    firstName: string;
                    lastName: string;
                };
            } & {
                status: import(".prisma/client").$Enums.PrescriptionStatus;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                doctorId: string;
                duration: string;
                patientId: string;
                prescribedAt: Date;
                visitId: string | null;
                medicationName: string;
                genericName: string | null;
                dosage: string;
                frequency: string;
                quantity: number;
                refills: number;
                instructions: string | null;
                drugInteractions: string[];
                contraindications: string[];
                pharmacyName: string | null;
                pharmacyAddress: string | null;
                pharmacyPhone: string | null;
                deliveryMethod: import(".prisma/client").$Enums.DeliveryMethod;
                filledAt: Date | null;
                pickedUpAt: Date | null;
                qrCode: string | null;
                digitalSignature: string | null;
            };
        })[];
        message: string;
    }>;
    private calculateHealthMetrics;
    getVitalSignsHistory(patientId: string, limit?: number): Promise<{
        success: boolean;
        data: {
            bloodPressure: any[];
            heartRate: any[];
            temperature: any[];
            weight: any[];
            height: any[];
        };
        message: string;
    }>;
    generatePatientSummary(patientId: string): Promise<{
        success: boolean;
        data: {
            timeline: ({
                type: string;
                date: Date;
                data: {
                    doctor: {
                        id: string;
                        firstName: string;
                        lastName: string;
                        specialization: string;
                    };
                    diagnoses: {
                        id: string;
                        createdAt: Date;
                        visitId: string;
                        icd10Code: string;
                        diagnosisName: string;
                        isPrimary: boolean;
                        notes: string | null;
                    }[];
                } & {
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string;
                    visitDate: Date;
                    patientId: string;
                    appointmentId: string | null;
                    visitType: import(".prisma/client").$Enums.VisitType;
                    chiefComplaint: string;
                    subjective: string | null;
                    objective: string | null;
                    assessment: string | null;
                    plan: string | null;
                    voiceNotes: string | null;
                    voiceFileUrl: string | null;
                    followUpRequired: boolean;
                    followUpDate: Date | null;
                    followUpNotes: string | null;
                };
            } | {
                type: string;
                date: Date;
                data: {
                    status: import(".prisma/client").$Enums.LabResultStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string | null;
                    patientId: string;
                    reportedAt: Date;
                    orderId: string | null;
                    testName: string;
                    testCategory: import(".prisma/client").$Enums.LabTestCategory;
                    resultValue: string;
                    resultUnit: string | null;
                    referenceRange: string | null;
                    isAbnormal: boolean;
                    criticalValue: boolean;
                    reportFileUrl: string | null;
                    ocrText: string | null;
                    labName: string;
                    labAddress: string | null;
                    labPhone: string | null;
                    technicianName: string | null;
                    collectedAt: Date;
                    processedAt: Date | null;
                    reviewedAt: Date | null;
                    reviewedBy: string | null;
                };
            } | {
                type: string;
                date: Date;
                data: {
                    status: import(".prisma/client").$Enums.ImagingResultStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string | null;
                    patientId: string;
                    reportedAt: Date;
                    orderId: string | null;
                    reportFileUrl: string | null;
                    ocrText: string | null;
                    reviewedAt: Date | null;
                    reviewedBy: string | null;
                    studyType: import(".prisma/client").$Enums.ImagingStudyType;
                    bodyPart: string;
                    technique: string | null;
                    contrastUsed: boolean;
                    findings: string | null;
                    impression: string | null;
                    recommendations: string | null;
                    imageUrls: string[];
                    radiologistName: string | null;
                    radiologistId: string | null;
                    performedAt: Date;
                };
            } | {
                type: string;
                date: Date;
                data: {
                    doctor: {
                        id: string;
                        firstName: string;
                        lastName: string;
                    };
                } & {
                    status: import(".prisma/client").$Enums.PrescriptionStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string;
                    duration: string;
                    patientId: string;
                    prescribedAt: Date;
                    visitId: string | null;
                    medicationName: string;
                    genericName: string | null;
                    dosage: string;
                    frequency: string;
                    quantity: number;
                    refills: number;
                    instructions: string | null;
                    drugInteractions: string[];
                    contraindications: string[];
                    pharmacyName: string | null;
                    pharmacyAddress: string | null;
                    pharmacyPhone: string | null;
                    deliveryMethod: import(".prisma/client").$Enums.DeliveryMethod;
                    filledAt: Date | null;
                    pickedUpAt: Date | null;
                    qrCode: string | null;
                    digitalSignature: string | null;
                };
            })[];
            generatedAt: Date;
            patient: {
                id: string;
                name: string;
                email: string;
                phoneNumber: string;
                dateOfBirth: Date;
                gender: import(".prisma/client").$Enums.Gender;
            };
            profile: {
                prescriptions: {
                    status: import(".prisma/client").$Enums.PrescriptionStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string;
                    duration: string;
                    patientId: string;
                    prescribedAt: Date;
                    visitId: string | null;
                    medicationName: string;
                    genericName: string | null;
                    dosage: string;
                    frequency: string;
                    quantity: number;
                    refills: number;
                    instructions: string | null;
                    drugInteractions: string[];
                    contraindications: string[];
                    pharmacyName: string | null;
                    pharmacyAddress: string | null;
                    pharmacyPhone: string | null;
                    deliveryMethod: import(".prisma/client").$Enums.DeliveryMethod;
                    filledAt: Date | null;
                    pickedUpAt: Date | null;
                    qrCode: string | null;
                    digitalSignature: string | null;
                }[];
                labResults: {
                    status: import(".prisma/client").$Enums.LabResultStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string | null;
                    patientId: string;
                    reportedAt: Date;
                    orderId: string | null;
                    testName: string;
                    testCategory: import(".prisma/client").$Enums.LabTestCategory;
                    resultValue: string;
                    resultUnit: string | null;
                    referenceRange: string | null;
                    isAbnormal: boolean;
                    criticalValue: boolean;
                    reportFileUrl: string | null;
                    ocrText: string | null;
                    labName: string;
                    labAddress: string | null;
                    labPhone: string | null;
                    technicianName: string | null;
                    collectedAt: Date;
                    processedAt: Date | null;
                    reviewedAt: Date | null;
                    reviewedBy: string | null;
                }[];
                imagingResults: {
                    status: import(".prisma/client").$Enums.ImagingResultStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string | null;
                    patientId: string;
                    reportedAt: Date;
                    orderId: string | null;
                    reportFileUrl: string | null;
                    ocrText: string | null;
                    reviewedAt: Date | null;
                    reviewedBy: string | null;
                    studyType: import(".prisma/client").$Enums.ImagingStudyType;
                    bodyPart: string;
                    technique: string | null;
                    contrastUsed: boolean;
                    findings: string | null;
                    impression: string | null;
                    recommendations: string | null;
                    imageUrls: string[];
                    radiologistName: string | null;
                    radiologistId: string | null;
                    performedAt: Date;
                }[];
                allergies: {
                    id: string;
                    severity: import(".prisma/client").$Enums.AllergySeverity;
                    createdAt: Date;
                    updatedAt: Date;
                    patientId: string;
                    notes: string | null;
                    allergen: string;
                    reaction: string;
                    diagnosedAt: Date | null;
                    diagnosedBy: string | null;
                }[];
                currentMedications: {
                    startDate: Date;
                    endDate: Date | null;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    patientId: string;
                    medicationName: string;
                    dosage: string;
                    frequency: string;
                    notes: string | null;
                    route: string | null;
                    prescribedBy: string | null;
                    pharmacy: string | null;
                }[];
                visits: ({
                    doctor: {
                        id: string;
                        firstName: string;
                        lastName: string;
                        specialization: string;
                    };
                    diagnoses: {
                        id: string;
                        createdAt: Date;
                        visitId: string;
                        icd10Code: string;
                        diagnosisName: string;
                        isPrimary: boolean;
                        notes: string | null;
                    }[];
                } & {
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string;
                    visitDate: Date;
                    patientId: string;
                    appointmentId: string | null;
                    visitType: import(".prisma/client").$Enums.VisitType;
                    chiefComplaint: string;
                    subjective: string | null;
                    objective: string | null;
                    assessment: string | null;
                    plan: string | null;
                    voiceNotes: string | null;
                    voiceFileUrl: string | null;
                    followUpRequired: boolean;
                    followUpDate: Date | null;
                    followUpNotes: string | null;
                })[];
            } & {
                id: string;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                createdAt: Date;
                updatedAt: Date;
                patientId: string;
                bloodType: import(".prisma/client").$Enums.BloodType | null;
                height: number | null;
                weight: number | null;
                emergencyContact: string | null;
                emergencyPhone: string | null;
                medicalHistory: string[];
                surgicalHistory: string[];
                familyHistory: string[];
                socialHistory: string | null;
                primaryInsurance: string | null;
                insuranceNumber: string | null;
                insuranceExpiry: Date | null;
                preferredLanguage: string;
                communicationPref: import(".prisma/client").$Enums.CommunicationPreference;
            };
            healthMetrics: {
                riskFactors: any[];
                activeConditions: string[];
                medicationCount: number;
                allergyCount: number;
                lastVisitDate: Date;
                criticalLabResults: number;
            };
            recentActivity: {
                visits: ({
                    doctor: {
                        id: string;
                        firstName: string;
                        lastName: string;
                        specialization: string;
                    };
                    diagnoses: {
                        id: string;
                        createdAt: Date;
                        visitId: string;
                        icd10Code: string;
                        diagnosisName: string;
                        isPrimary: boolean;
                        notes: string | null;
                    }[];
                } & {
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string;
                    visitDate: Date;
                    patientId: string;
                    appointmentId: string | null;
                    visitType: import(".prisma/client").$Enums.VisitType;
                    chiefComplaint: string;
                    subjective: string | null;
                    objective: string | null;
                    assessment: string | null;
                    plan: string | null;
                    voiceNotes: string | null;
                    voiceFileUrl: string | null;
                    followUpRequired: boolean;
                    followUpDate: Date | null;
                    followUpNotes: string | null;
                })[];
                labResults: {
                    status: import(".prisma/client").$Enums.LabResultStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string | null;
                    patientId: string;
                    reportedAt: Date;
                    orderId: string | null;
                    testName: string;
                    testCategory: import(".prisma/client").$Enums.LabTestCategory;
                    resultValue: string;
                    resultUnit: string | null;
                    referenceRange: string | null;
                    isAbnormal: boolean;
                    criticalValue: boolean;
                    reportFileUrl: string | null;
                    ocrText: string | null;
                    labName: string;
                    labAddress: string | null;
                    labPhone: string | null;
                    technicianName: string | null;
                    collectedAt: Date;
                    processedAt: Date | null;
                    reviewedAt: Date | null;
                    reviewedBy: string | null;
                }[];
                imagingResults: {
                    status: import(".prisma/client").$Enums.ImagingResultStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string | null;
                    patientId: string;
                    reportedAt: Date;
                    orderId: string | null;
                    reportFileUrl: string | null;
                    ocrText: string | null;
                    reviewedAt: Date | null;
                    reviewedBy: string | null;
                    studyType: import(".prisma/client").$Enums.ImagingStudyType;
                    bodyPart: string;
                    technique: string | null;
                    contrastUsed: boolean;
                    findings: string | null;
                    impression: string | null;
                    recommendations: string | null;
                    imageUrls: string[];
                    radiologistName: string | null;
                    radiologistId: string | null;
                    performedAt: Date;
                }[];
                prescriptions: {
                    status: import(".prisma/client").$Enums.PrescriptionStatus;
                    id: string;
                    createdAt: Date;
                    updatedAt: Date;
                    doctorId: string;
                    duration: string;
                    patientId: string;
                    prescribedAt: Date;
                    visitId: string | null;
                    medicationName: string;
                    genericName: string | null;
                    dosage: string;
                    frequency: string;
                    quantity: number;
                    refills: number;
                    instructions: string | null;
                    drugInteractions: string[];
                    contraindications: string[];
                    pharmacyName: string | null;
                    pharmacyAddress: string | null;
                    pharmacyPhone: string | null;
                    deliveryMethod: import(".prisma/client").$Enums.DeliveryMethod;
                    filledAt: Date | null;
                    pickedUpAt: Date | null;
                    qrCode: string | null;
                    digitalSignature: string | null;
                }[];
            };
        };
        message: string;
    }>;
}
