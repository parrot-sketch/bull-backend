import { DatabaseService } from '../../auth/services/database.service';
export declare class DoctorProfileService {
    private readonly db;
    constructor(db: DatabaseService);
    createProfile(doctorId: string, profileData: {
        specialization: string;
        bio?: string;
        experience?: string;
        education?: string;
        consultationFee: number;
        services?: string;
        availability?: string;
    }): Promise<{
        success: boolean;
        data: {
            id: string;
            npiNumber: string | null;
            createdAt: Date;
            updatedAt: Date;
            doctorId: string;
            title: string | null;
            credentials: string[];
            specialties: string[];
            subSpecialties: string[];
            yearsExperience: number | null;
            practiceName: string | null;
            practiceType: import(".prisma/client").$Enums.PracticeType;
            practiceAddress: string | null;
            practiceCity: string | null;
            practiceState: string | null;
            practiceZipCode: string | null;
            practicePhone: string | null;
            practiceEmail: string | null;
            practiceWebsite: string | null;
            medicalLicenseNumber: string | null;
            medicalLicenseState: string | null;
            medicalLicenseExpiry: Date | null;
            deaNumber: string | null;
            boardCertifications: string[];
            professionalBio: string | null;
            education: string | null;
            awards: string[];
            publications: string[];
            languages: string[];
            isAcceptingNewPatients: boolean;
            consultationTypes: import(".prisma/client").$Enums.ConsultationType[];
        };
        message: string;
    }>;
    getProfile(doctorId: string): Promise<{
        success: boolean;
        data: {
            doctor: {
                id: string;
                email: string;
                firstName: string;
                lastName: string;
                avatar: string;
                phoneNumber: string;
            };
        } & {
            id: string;
            npiNumber: string | null;
            createdAt: Date;
            updatedAt: Date;
            doctorId: string;
            title: string | null;
            credentials: string[];
            specialties: string[];
            subSpecialties: string[];
            yearsExperience: number | null;
            practiceName: string | null;
            practiceType: import(".prisma/client").$Enums.PracticeType;
            practiceAddress: string | null;
            practiceCity: string | null;
            practiceState: string | null;
            practiceZipCode: string | null;
            practicePhone: string | null;
            practiceEmail: string | null;
            practiceWebsite: string | null;
            medicalLicenseNumber: string | null;
            medicalLicenseState: string | null;
            medicalLicenseExpiry: Date | null;
            deaNumber: string | null;
            boardCertifications: string[];
            professionalBio: string | null;
            education: string | null;
            awards: string[];
            publications: string[];
            languages: string[];
            isAcceptingNewPatients: boolean;
            consultationTypes: import(".prisma/client").$Enums.ConsultationType[];
        };
    }>;
    updateProfile(doctorId: string, updateData: {
        specialization?: string;
        bio?: string;
        experience?: string;
        education?: string;
        consultationFee?: number;
        services?: string;
        availability?: string;
    }): Promise<{
        success: boolean;
        data: {
            id: string;
            npiNumber: string | null;
            createdAt: Date;
            updatedAt: Date;
            doctorId: string;
            title: string | null;
            credentials: string[];
            specialties: string[];
            subSpecialties: string[];
            yearsExperience: number | null;
            practiceName: string | null;
            practiceType: import(".prisma/client").$Enums.PracticeType;
            practiceAddress: string | null;
            practiceCity: string | null;
            practiceState: string | null;
            practiceZipCode: string | null;
            practicePhone: string | null;
            practiceEmail: string | null;
            practiceWebsite: string | null;
            medicalLicenseNumber: string | null;
            medicalLicenseState: string | null;
            medicalLicenseExpiry: Date | null;
            deaNumber: string | null;
            boardCertifications: string[];
            professionalBio: string | null;
            education: string | null;
            awards: string[];
            publications: string[];
            languages: string[];
            isAcceptingNewPatients: boolean;
            consultationTypes: import(".prisma/client").$Enums.ConsultationType[];
        };
        message: string;
    }>;
    getPublicProfile(doctorId: string): Promise<{
        success: boolean;
        data: {
            doctor: {
                id: string;
                firstName: string;
                lastName: string;
                avatar: string;
            };
        } & {
            id: string;
            npiNumber: string | null;
            createdAt: Date;
            updatedAt: Date;
            doctorId: string;
            title: string | null;
            credentials: string[];
            specialties: string[];
            subSpecialties: string[];
            yearsExperience: number | null;
            practiceName: string | null;
            practiceType: import(".prisma/client").$Enums.PracticeType;
            practiceAddress: string | null;
            practiceCity: string | null;
            practiceState: string | null;
            practiceZipCode: string | null;
            practicePhone: string | null;
            practiceEmail: string | null;
            practiceWebsite: string | null;
            medicalLicenseNumber: string | null;
            medicalLicenseState: string | null;
            medicalLicenseExpiry: Date | null;
            deaNumber: string | null;
            boardCertifications: string[];
            professionalBio: string | null;
            education: string | null;
            awards: string[];
            publications: string[];
            languages: string[];
            isAcceptingNewPatients: boolean;
            consultationTypes: import(".prisma/client").$Enums.ConsultationType[];
        };
    }>;
}
