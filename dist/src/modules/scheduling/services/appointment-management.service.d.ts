import { DatabaseService } from '../../auth/services/database.service';
import { NotificationService } from '../../notifications/services/notification.service';
import { SlotEngineService } from './slot-engine.service';
export declare class AppointmentManagementService {
    private db;
    private slotEngine;
    private notificationService;
    private readonly logger;
    constructor(db: DatabaseService, slotEngine: SlotEngineService, notificationService: NotificationService);
    createAppointment(appointmentData: {
        patientId: string;
        doctorId: string;
        date: string;
        startTime: string;
        endTime: string;
        type: string;
        notes?: string;
        patientName?: string;
        patientPhone?: string;
        patientEmail?: string;
    }): Promise<{
        success: boolean;
        data: {
            patient: {
                role: import(".prisma/client").$Enums.UserRole;
                id: string;
                email: string;
                password: string;
                firstName: string;
                lastName: string;
                isActive: boolean;
                isVerified: boolean;
                isLocked: boolean;
                lockedUntil: Date | null;
                avatar: string | null;
                phoneNumber: string | null;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zipCode: string | null;
                country: string;
                department: string | null;
                specialization: string | null;
                licenseNumber: string | null;
                npiNumber: string | null;
                lastLoginAt: Date | null;
                lastPasswordChange: Date;
                passwordResetToken: string | null;
                passwordResetExpires: Date | null;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            type: import(".prisma/client").$Enums.AppointmentType;
            status: import(".prisma/client").$Enums.AppointmentStatus;
            prescription: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            location: string | null;
            doctorId: string;
            duration: number;
            serviceId: string | null;
            patientId: string;
            followUpDate: Date | null;
            notes: string | null;
            symptoms: string | null;
            reasonForVisit: string | null;
            startTime: string;
            endTime: string;
            serviceType: string | null;
            isRecurring: boolean;
            scheduleId: string | null;
            appointmentDate: Date;
            diagnosis: string | null;
            insuranceId: string | null;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            bookingRequestedAt: Date;
            confirmedAt: Date | null;
            cancelledAt: Date | null;
            cancelledBy: string | null;
            cancellationReason: string | null;
            requiresConfirmation: boolean;
            confirmationSent: boolean;
            recurringPattern: string | null;
            parentAppointmentId: string | null;
        };
        message: string;
    }>;
    confirmAppointment(appointmentId: string, doctorId: string): Promise<{
        success: boolean;
        data: {
            patient: {
                role: import(".prisma/client").$Enums.UserRole;
                id: string;
                email: string;
                password: string;
                firstName: string;
                lastName: string;
                isActive: boolean;
                isVerified: boolean;
                isLocked: boolean;
                lockedUntil: Date | null;
                avatar: string | null;
                phoneNumber: string | null;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zipCode: string | null;
                country: string;
                department: string | null;
                specialization: string | null;
                licenseNumber: string | null;
                npiNumber: string | null;
                lastLoginAt: Date | null;
                lastPasswordChange: Date;
                passwordResetToken: string | null;
                passwordResetExpires: Date | null;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            type: import(".prisma/client").$Enums.AppointmentType;
            status: import(".prisma/client").$Enums.AppointmentStatus;
            prescription: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            location: string | null;
            doctorId: string;
            duration: number;
            serviceId: string | null;
            patientId: string;
            followUpDate: Date | null;
            notes: string | null;
            symptoms: string | null;
            reasonForVisit: string | null;
            startTime: string;
            endTime: string;
            serviceType: string | null;
            isRecurring: boolean;
            scheduleId: string | null;
            appointmentDate: Date;
            diagnosis: string | null;
            insuranceId: string | null;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            bookingRequestedAt: Date;
            confirmedAt: Date | null;
            cancelledAt: Date | null;
            cancelledBy: string | null;
            cancellationReason: string | null;
            requiresConfirmation: boolean;
            confirmationSent: boolean;
            recurringPattern: string | null;
            parentAppointmentId: string | null;
        };
        message: string;
    }>;
    rescheduleAppointment(appointmentId: string, newDate: string, newStartTime: string, newEndTime: string, reason?: string): Promise<{
        success: boolean;
        data: {
            patient: {
                role: import(".prisma/client").$Enums.UserRole;
                id: string;
                email: string;
                password: string;
                firstName: string;
                lastName: string;
                isActive: boolean;
                isVerified: boolean;
                isLocked: boolean;
                lockedUntil: Date | null;
                avatar: string | null;
                phoneNumber: string | null;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zipCode: string | null;
                country: string;
                department: string | null;
                specialization: string | null;
                licenseNumber: string | null;
                npiNumber: string | null;
                lastLoginAt: Date | null;
                lastPasswordChange: Date;
                passwordResetToken: string | null;
                passwordResetExpires: Date | null;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            type: import(".prisma/client").$Enums.AppointmentType;
            status: import(".prisma/client").$Enums.AppointmentStatus;
            prescription: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            location: string | null;
            doctorId: string;
            duration: number;
            serviceId: string | null;
            patientId: string;
            followUpDate: Date | null;
            notes: string | null;
            symptoms: string | null;
            reasonForVisit: string | null;
            startTime: string;
            endTime: string;
            serviceType: string | null;
            isRecurring: boolean;
            scheduleId: string | null;
            appointmentDate: Date;
            diagnosis: string | null;
            insuranceId: string | null;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            bookingRequestedAt: Date;
            confirmedAt: Date | null;
            cancelledAt: Date | null;
            cancelledBy: string | null;
            cancellationReason: string | null;
            requiresConfirmation: boolean;
            confirmationSent: boolean;
            recurringPattern: string | null;
            parentAppointmentId: string | null;
        };
        message: string;
    }>;
    cancelAppointment(appointmentId: string, reason?: string, cancelledBy?: 'DOCTOR' | 'PATIENT'): Promise<{
        success: boolean;
        data: {
            patient: {
                role: import(".prisma/client").$Enums.UserRole;
                id: string;
                email: string;
                password: string;
                firstName: string;
                lastName: string;
                isActive: boolean;
                isVerified: boolean;
                isLocked: boolean;
                lockedUntil: Date | null;
                avatar: string | null;
                phoneNumber: string | null;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zipCode: string | null;
                country: string;
                department: string | null;
                specialization: string | null;
                licenseNumber: string | null;
                npiNumber: string | null;
                lastLoginAt: Date | null;
                lastPasswordChange: Date;
                passwordResetToken: string | null;
                passwordResetExpires: Date | null;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            type: import(".prisma/client").$Enums.AppointmentType;
            status: import(".prisma/client").$Enums.AppointmentStatus;
            prescription: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            location: string | null;
            doctorId: string;
            duration: number;
            serviceId: string | null;
            patientId: string;
            followUpDate: Date | null;
            notes: string | null;
            symptoms: string | null;
            reasonForVisit: string | null;
            startTime: string;
            endTime: string;
            serviceType: string | null;
            isRecurring: boolean;
            scheduleId: string | null;
            appointmentDate: Date;
            diagnosis: string | null;
            insuranceId: string | null;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            bookingRequestedAt: Date;
            confirmedAt: Date | null;
            cancelledAt: Date | null;
            cancelledBy: string | null;
            cancellationReason: string | null;
            requiresConfirmation: boolean;
            confirmationSent: boolean;
            recurringPattern: string | null;
            parentAppointmentId: string | null;
        };
        message: string;
    }>;
    completeAppointment(appointmentId: string, doctorId: string, notes?: string): Promise<{
        success: boolean;
        data: {
            patient: {
                role: import(".prisma/client").$Enums.UserRole;
                id: string;
                email: string;
                password: string;
                firstName: string;
                lastName: string;
                isActive: boolean;
                isVerified: boolean;
                isLocked: boolean;
                lockedUntil: Date | null;
                avatar: string | null;
                phoneNumber: string | null;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zipCode: string | null;
                country: string;
                department: string | null;
                specialization: string | null;
                licenseNumber: string | null;
                npiNumber: string | null;
                lastLoginAt: Date | null;
                lastPasswordChange: Date;
                passwordResetToken: string | null;
                passwordResetExpires: Date | null;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            type: import(".prisma/client").$Enums.AppointmentType;
            status: import(".prisma/client").$Enums.AppointmentStatus;
            prescription: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            location: string | null;
            doctorId: string;
            duration: number;
            serviceId: string | null;
            patientId: string;
            followUpDate: Date | null;
            notes: string | null;
            symptoms: string | null;
            reasonForVisit: string | null;
            startTime: string;
            endTime: string;
            serviceType: string | null;
            isRecurring: boolean;
            scheduleId: string | null;
            appointmentDate: Date;
            diagnosis: string | null;
            insuranceId: string | null;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            bookingRequestedAt: Date;
            confirmedAt: Date | null;
            cancelledAt: Date | null;
            cancelledBy: string | null;
            cancellationReason: string | null;
            requiresConfirmation: boolean;
            confirmationSent: boolean;
            recurringPattern: string | null;
            parentAppointmentId: string | null;
        };
        message: string;
    }>;
    getDoctorAppointments(doctorId: string, startDate?: string, endDate?: string, status?: string): Promise<{
        success: boolean;
        data: ({
            patient: {
                role: import(".prisma/client").$Enums.UserRole;
                id: string;
                email: string;
                password: string;
                firstName: string;
                lastName: string;
                isActive: boolean;
                isVerified: boolean;
                isLocked: boolean;
                lockedUntil: Date | null;
                avatar: string | null;
                phoneNumber: string | null;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zipCode: string | null;
                country: string;
                department: string | null;
                specialization: string | null;
                licenseNumber: string | null;
                npiNumber: string | null;
                lastLoginAt: Date | null;
                lastPasswordChange: Date;
                passwordResetToken: string | null;
                passwordResetExpires: Date | null;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            type: import(".prisma/client").$Enums.AppointmentType;
            status: import(".prisma/client").$Enums.AppointmentStatus;
            prescription: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            location: string | null;
            doctorId: string;
            duration: number;
            serviceId: string | null;
            patientId: string;
            followUpDate: Date | null;
            notes: string | null;
            symptoms: string | null;
            reasonForVisit: string | null;
            startTime: string;
            endTime: string;
            serviceType: string | null;
            isRecurring: boolean;
            scheduleId: string | null;
            appointmentDate: Date;
            diagnosis: string | null;
            insuranceId: string | null;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            bookingRequestedAt: Date;
            confirmedAt: Date | null;
            cancelledAt: Date | null;
            cancelledBy: string | null;
            cancellationReason: string | null;
            requiresConfirmation: boolean;
            confirmationSent: boolean;
            recurringPattern: string | null;
            parentAppointmentId: string | null;
        })[];
        message: string;
    }>;
    getPatientAppointments(patientId: string, startDate?: string, endDate?: string, status?: string): Promise<{
        success: boolean;
        data: ({
            patient: {
                role: import(".prisma/client").$Enums.UserRole;
                id: string;
                email: string;
                password: string;
                firstName: string;
                lastName: string;
                isActive: boolean;
                isVerified: boolean;
                isLocked: boolean;
                lockedUntil: Date | null;
                avatar: string | null;
                phoneNumber: string | null;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zipCode: string | null;
                country: string;
                department: string | null;
                specialization: string | null;
                licenseNumber: string | null;
                npiNumber: string | null;
                lastLoginAt: Date | null;
                lastPasswordChange: Date;
                passwordResetToken: string | null;
                passwordResetExpires: Date | null;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            type: import(".prisma/client").$Enums.AppointmentType;
            status: import(".prisma/client").$Enums.AppointmentStatus;
            prescription: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            location: string | null;
            doctorId: string;
            duration: number;
            serviceId: string | null;
            patientId: string;
            followUpDate: Date | null;
            notes: string | null;
            symptoms: string | null;
            reasonForVisit: string | null;
            startTime: string;
            endTime: string;
            serviceType: string | null;
            isRecurring: boolean;
            scheduleId: string | null;
            appointmentDate: Date;
            diagnosis: string | null;
            insuranceId: string | null;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            bookingRequestedAt: Date;
            confirmedAt: Date | null;
            cancelledAt: Date | null;
            cancelledBy: string | null;
            cancellationReason: string | null;
            requiresConfirmation: boolean;
            confirmationSent: boolean;
            recurringPattern: string | null;
            parentAppointmentId: string | null;
        })[];
        message: string;
    }>;
    getAppointmentById(appointmentId: string): Promise<{
        success: boolean;
        data: {
            patient: {
                role: import(".prisma/client").$Enums.UserRole;
                id: string;
                email: string;
                password: string;
                firstName: string;
                lastName: string;
                isActive: boolean;
                isVerified: boolean;
                isLocked: boolean;
                lockedUntil: Date | null;
                avatar: string | null;
                phoneNumber: string | null;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zipCode: string | null;
                country: string;
                department: string | null;
                specialization: string | null;
                licenseNumber: string | null;
                npiNumber: string | null;
                lastLoginAt: Date | null;
                lastPasswordChange: Date;
                passwordResetToken: string | null;
                passwordResetExpires: Date | null;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            type: import(".prisma/client").$Enums.AppointmentType;
            status: import(".prisma/client").$Enums.AppointmentStatus;
            prescription: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            location: string | null;
            doctorId: string;
            duration: number;
            serviceId: string | null;
            patientId: string;
            followUpDate: Date | null;
            notes: string | null;
            symptoms: string | null;
            reasonForVisit: string | null;
            startTime: string;
            endTime: string;
            serviceType: string | null;
            isRecurring: boolean;
            scheduleId: string | null;
            appointmentDate: Date;
            diagnosis: string | null;
            insuranceId: string | null;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            bookingRequestedAt: Date;
            confirmedAt: Date | null;
            cancelledAt: Date | null;
            cancelledBy: string | null;
            cancellationReason: string | null;
            requiresConfirmation: boolean;
            confirmationSent: boolean;
            recurringPattern: string | null;
            parentAppointmentId: string | null;
        };
        message: string;
    }>;
    getUpcomingAppointments(doctorId: string, limit?: number): Promise<{
        success: boolean;
        data: ({
            patient: {
                role: import(".prisma/client").$Enums.UserRole;
                id: string;
                email: string;
                password: string;
                firstName: string;
                lastName: string;
                isActive: boolean;
                isVerified: boolean;
                isLocked: boolean;
                lockedUntil: Date | null;
                avatar: string | null;
                phoneNumber: string | null;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zipCode: string | null;
                country: string;
                department: string | null;
                specialization: string | null;
                licenseNumber: string | null;
                npiNumber: string | null;
                lastLoginAt: Date | null;
                lastPasswordChange: Date;
                passwordResetToken: string | null;
                passwordResetExpires: Date | null;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            type: import(".prisma/client").$Enums.AppointmentType;
            status: import(".prisma/client").$Enums.AppointmentStatus;
            prescription: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            location: string | null;
            doctorId: string;
            duration: number;
            serviceId: string | null;
            patientId: string;
            followUpDate: Date | null;
            notes: string | null;
            symptoms: string | null;
            reasonForVisit: string | null;
            startTime: string;
            endTime: string;
            serviceType: string | null;
            isRecurring: boolean;
            scheduleId: string | null;
            appointmentDate: Date;
            diagnosis: string | null;
            insuranceId: string | null;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            bookingRequestedAt: Date;
            confirmedAt: Date | null;
            cancelledAt: Date | null;
            cancelledBy: string | null;
            cancellationReason: string | null;
            requiresConfirmation: boolean;
            confirmationSent: boolean;
            recurringPattern: string | null;
            parentAppointmentId: string | null;
        })[];
        message: string;
    }>;
    getTodaysAppointments(doctorId: string): Promise<{
        success: boolean;
        data: ({
            patient: {
                role: import(".prisma/client").$Enums.UserRole;
                id: string;
                email: string;
                password: string;
                firstName: string;
                lastName: string;
                isActive: boolean;
                isVerified: boolean;
                isLocked: boolean;
                lockedUntil: Date | null;
                avatar: string | null;
                phoneNumber: string | null;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zipCode: string | null;
                country: string;
                department: string | null;
                specialization: string | null;
                licenseNumber: string | null;
                npiNumber: string | null;
                lastLoginAt: Date | null;
                lastPasswordChange: Date;
                passwordResetToken: string | null;
                passwordResetExpires: Date | null;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            type: import(".prisma/client").$Enums.AppointmentType;
            status: import(".prisma/client").$Enums.AppointmentStatus;
            prescription: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            location: string | null;
            doctorId: string;
            duration: number;
            serviceId: string | null;
            patientId: string;
            followUpDate: Date | null;
            notes: string | null;
            symptoms: string | null;
            reasonForVisit: string | null;
            startTime: string;
            endTime: string;
            serviceType: string | null;
            isRecurring: boolean;
            scheduleId: string | null;
            appointmentDate: Date;
            diagnosis: string | null;
            insuranceId: string | null;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            bookingRequestedAt: Date;
            confirmedAt: Date | null;
            cancelledAt: Date | null;
            cancelledBy: string | null;
            cancellationReason: string | null;
            requiresConfirmation: boolean;
            confirmationSent: boolean;
            recurringPattern: string | null;
            parentAppointmentId: string | null;
        })[];
        message: string;
    }>;
    getAppointmentStats(doctorId: string, startDate?: string, endDate?: string): Promise<{
        success: boolean;
        data: {
            total: number;
            pending: number;
            confirmed: number;
            completed: number;
            cancelled: number;
            noShow: number;
        };
        message: string;
    }>;
    getPatientAppointmentHistory(patientId: string, limit?: number): Promise<{
        success: boolean;
        data: ({
            patient: {
                role: import(".prisma/client").$Enums.UserRole;
                id: string;
                email: string;
                password: string;
                firstName: string;
                lastName: string;
                isActive: boolean;
                isVerified: boolean;
                isLocked: boolean;
                lockedUntil: Date | null;
                avatar: string | null;
                phoneNumber: string | null;
                dateOfBirth: Date | null;
                gender: import(".prisma/client").$Enums.Gender | null;
                address: string | null;
                city: string | null;
                state: string | null;
                zipCode: string | null;
                country: string;
                department: string | null;
                specialization: string | null;
                licenseNumber: string | null;
                npiNumber: string | null;
                lastLoginAt: Date | null;
                lastPasswordChange: Date;
                passwordResetToken: string | null;
                passwordResetExpires: Date | null;
                createdAt: Date;
                updatedAt: Date;
            };
        } & {
            type: import(".prisma/client").$Enums.AppointmentType;
            status: import(".prisma/client").$Enums.AppointmentStatus;
            prescription: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            location: string | null;
            doctorId: string;
            duration: number;
            serviceId: string | null;
            patientId: string;
            followUpDate: Date | null;
            notes: string | null;
            symptoms: string | null;
            reasonForVisit: string | null;
            startTime: string;
            endTime: string;
            serviceType: string | null;
            isRecurring: boolean;
            scheduleId: string | null;
            appointmentDate: Date;
            diagnosis: string | null;
            insuranceId: string | null;
            paymentStatus: import(".prisma/client").$Enums.PaymentStatus;
            bookingRequestedAt: Date;
            confirmedAt: Date | null;
            cancelledAt: Date | null;
            cancelledBy: string | null;
            cancellationReason: string | null;
            requiresConfirmation: boolean;
            confirmationSent: boolean;
            recurringPattern: string | null;
            parentAppointmentId: string | null;
        })[];
        message: string;
    }>;
}
