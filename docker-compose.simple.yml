version: '3.8'

services:
  # API Gateway (Main Backend)
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ihosi-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://ihosi:ihosi123@postgres:5432/ihosi
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production
    depends_on:
      - postgres
      - redis
    networks:
      - ihosi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/gateway/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ihosi-postgres
    environment:
      - POSTGRES_DB=ihosi
      - POSTGRES_USER=ihosi
      - POSTGRES_PASSWORD=ihosi123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ihosi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ihosi"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ihosi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ihosi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Load Balancer (Nginx)
  nginx:
    image: nginx:alpine
    container_name: ihosi-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api-gateway
    networks:
      - ihosi-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  ihosi-network:
    driver: bridge

